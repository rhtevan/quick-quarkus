
# Disable oidc extension in normal/prod mode
%prod.quarkus.oidc.enabled=false

# OIDC extension DevUI configuration in dev mode only
quarkus.oidc.devui.grant.type=CODE

# Keycloak extension configuration in dev mode only
# Exported realm with kc.sh ONLY, Keycload UI export DOESN'T work!!!
# These properties are for pre-loading keycloak realm
# Note: Not sure why, have to work with an exported realm, 
#       ad-hoc keycloak autherization changes won't take effect
#       the realm file is at github/rhtevan/quick-quarkus repo
quarkus.keycloak.devservices.realm-path=.keycloak/quarkus-realm.json
#%dev.quarkus.keycloak.policy-enforcer.lazy-load-paths=false

# Enable keycloak autherizaation after authentication demo
# Demo steps:
#   - Enable authorization for quark-app client
#   - Add 'roles' client-scope
#   - Remove 'Default Resource', otherwise it will lock up DevUI
#   - Add new resources for /hello/authenticated, /hello/restricted
#   - Restart DevUI
%dev.quarkus.keycloak.policy-enforcer.enable=false
%dev.quarkus.keycloak.policy-enforcer.path-cache.max-entries=0
#%dev.quarkus.keycloak.policy-enforcer.enforcement-mode=disabled

# OpenTelemetry configurations
%dev.quarkus.opentelemetry.enabled=true
# HTTP will be upgraded to gRPC
%dev.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:55680
# Issues (Fixed @2.11.2.Final): need to explicitly turn on builtin sampler 
#%dev.quarkus.opentelemetry.tracer.sampler=on
%dev.quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Build and deployment configuratoins for Kubernetes and OpenShift
quarkus.container-image.group=dev

quarkus.kubernetes.deploy=false
quarkus.kubernetes-client.trust-certs=true

quarkus.openshift.route.expose=true
quarkus.openshift.deployment-kind=Deployment
